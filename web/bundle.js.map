{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/diagram.ts",
    "src/neurons.ts",
    "src/nnn-web.ts",
    "src/text-utils.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import { NeuralNetwork, Neuron } from './neurons';\n\n\nconst BORDER_COLOR = 'black';\nconst NEURON_COLOR = '#337AB7';\nconst DISABLED_COLOR = '#AAA';\nconst INPUT_COLOR = NEURON_COLOR;\nconst BIAS_COLOR = '#2DD';\nconst NEGATIVE_WEIGHT_HUE = 0;\nconst POSITIVE_WEIGHT_HUE = 240;\nconst SELECT_CLASS = 'diagram-select';\n\n\nclass Synapse {\n\tconstructor(public neuron: Neuron, public weightNum: number) {}\n\n\ttoggle() {\n\t\tif (this.isDisabled()) {\n\t\t\tlet w = this.neuron.disabledWeights[this.weightNum];\n\t\t\tthis.neuron.weights[this.weightNum] = w;\n\t\t\tthis.neuron.disabledWeights[this.weightNum] = Number.NaN;\n\t\t}\n\t\telse {\n\t\t\tlet w = this.neuron.weights[this.weightNum];\n\t\t\tthis.neuron.disabledWeights[this.weightNum] = w;\n\t\t\tthis.neuron.weights[this.weightNum] = 0;\n\t\t}\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !isNaN(this.neuron.disabledWeights[this.weightNum]);\n\t}\n}\n\n\nexport class NeuralNetworkDiagram {\n\tctx: CanvasRenderingContext2D;\n\tr: number;\n\tnumCols: number;\n\tmouseX = -1;\n\tmouseY = -1;\n\tmouseNeuron: Neuron | null;\n\tmouseSynapse: Synapse | null;\n\n\tconstructor(public net: NeuralNetwork, public canvas: HTMLCanvasElement) {\n\t\tlet ctx = canvas.getContext('2d');\n\t\tif (ctx) this.ctx = ctx;\n\t\tthis.numCols = this.net.layerSizes.length + 1;\n\t\tthis.registerMouse();\n\t\t// Calculate radius\n\t\tlet maxRows = net.numInputs;\n\t\tnet.layers.forEach(layer => maxRows = Math.max(maxRows, layer.length));\n\t\tlet colH = this.canvas.height / maxRows;\n\t\tthis.r = Math.min(20, colH / 3);\n\t}\n\n\tdraw() {\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.drawWeights();\n\t\tthis.drawNodes();\n\t}\n\n\tdrawWeights() {\n\t\tlet gco = this.ctx.globalCompositeOperation;\n\t\tthis.ctx.globalCompositeOperation  = 'darken';\n\t\tlet minW = 0, maxW = 0;\n\t\tthis.net.layers.forEach(l => l.forEach(n => n.weights.forEach(w => {\n\t\t\tif (w < minW) minW = w;\n\t\t\tif (w > maxW) maxW = w;\n\t\t})));\n\t\tif (minW == 0) minW = 1;\n\t\tif (maxW == 0) maxW = 1;\n\t\tfor (let i = 0; i < this.net.layers.length; i++)\n\t\t\tfor (let j = 0; j < this.net.layers[i].length; j++)\n\t\t\t\tthis.drawNodeWeights(i, j, minW, maxW);\n\t\tthis.ctx.globalCompositeOperation  = gco;\n\t}\n\n\tdrawNodeWeights(i: number, j: number, minW: number, maxW: number) {\n\t\tlet neuron = this.net.layers[i][j];\n\t\tthis.ctx.lineWidth = 2;\n\t\tfor (let w = 0; w < neuron.weights.length; w++) {\n\t\t\tlet nw = neuron.weights[w];\n\t\t\tlet synapse = new Synapse(neuron, w);\n\t\t\tif (synapse.isDisabled()) {\n\t\t\t\tthis.ctx.strokeStyle = DISABLED_COLOR;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet div = nw < 0 ? minW : maxW;\n\t\t\t\tlet hue = nw < 0 ? NEGATIVE_WEIGHT_HUE : POSITIVE_WEIGHT_HUE;\n\t\t\t\tlet lightness = 100 - 66 * (nw / div);\n\t\t\t\tthis.ctx.strokeStyle = `hsl(${hue}, 100%, ${lightness}%)`;\n\t\t\t}\n\t\t\tlet [x1, y1] = this.getCenter(i, w);\n\t\t\tlet [x2, y2] = this.getCenter(i + 1, j);\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(x1, y1);\n\t\t\tthis.ctx.lineTo(x2, y2);\n\t\t\tthis.checkMouseInSynapse(neuron, w);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t}\n\n\tdrawNodes() {\n\t\tfor (let col = 0; col < this.numCols; col++) {\n\t\t\tthis.drawCol(col);\n\t\t}\n\t}\n\n\tdrawCol(col: number) {\n\t\tlet numRows = this.getNumRows(col);\n\t\tlet isOutput = this.isOutput(col);\n\t\tfor (let row = 0; row < numRows; row++) {\n\t\t\tlet isInput = col == 0;\n\t\t\tlet isBias = !isOutput && row == numRows - 1;\n\t\t\tlet isDisabled = !isInput && !isOutput && !isBias\n\t\t\t\t&& this.net.layers[col - 1][row].disabled;\n\t\t\tlet [x, y] = this.getCenter(col, row);\n\t\t\tthis.drawNode(x, y, this.r, isInput, isBias, isDisabled);\n\t\t\tif (!isInput && !isOutput && !isBias)\n\t\t\t\tthis.checkMouseInNeuron(x, y, this.r, col, row);\n\t\t}\n\t}\n\n\tdrawNode(x: number, y: number, r: number,\n\t\tisInput: boolean, isBias: boolean, isDisabled) {\n\t\tthis.ctx.strokeStyle = BORDER_COLOR;\n\t\tif (isBias)\n\t\t\tthis.ctx.fillStyle = BIAS_COLOR;\n\t\telse if (isInput)\n\t\t\tthis.ctx.fillStyle = INPUT_COLOR;\n\t\telse if (isDisabled)\n\t\t\tthis.ctx.fillStyle = DISABLED_COLOR;\n\t\telse\n\t\t\tthis.ctx.fillStyle = NEURON_COLOR;\n\t\tif (isInput || isBias) {\n\t\t\tlet x1 = x - r;\n\t\t\tlet y1 = y - r;\n\t\t\tlet dxy = r * 2;\n\t\t\tthis.ctx.fillRect(x1, y1, dxy, dxy);\n\t\t\tthis.ctx.strokeRect(x1, y1, dxy, dxy);\n\t\t}\n\t\telse {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.arc(x, y, r, 0, Math.PI * 2);\n\t\t\tthis.ctx.fill();\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.arc(x, y, r, 0, Math.PI * 2);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t}\n\n\tgetCenter(col: number, row: number): [number, number] {\n\t\tlet numRows = this.getNumRows(col);\n\t\tlet colW = this.canvas.width / this.numCols;\n\t\tlet rowH = this.canvas.height / numRows;\n\t\tlet x = col * colW + colW / 2;\n\t\tlet y = row * rowH + rowH / 2;\n\t\treturn [x, y];\n\t}\n\n\tgetNumRows(col: number): number {\n\t\tlet numRows = col == 0 ? this.net.numInputs : this.net.layerSizes[col - 1];\n\t\tif (!this.isOutput(col)) numRows++;\n\t\treturn numRows;\n\t}\n\n\tisOutput(col: number): boolean {\n\t\treturn col == this.net.layerSizes.length;\n\t}\n\n\t// ---------- Neuron/synapse enable/disable ---------------\n\n\tregisterMouse() {\n\t\t$(this.canvas)\n\t\t.on('mousemove', evt => {\n\t\t\tthis.mouseX = evt.offsetX;\n\t\t\tthis.mouseY = evt.offsetY;\n\t\t\tthis.mouseNeuron = null;\n\t\t\tthis.mouseSynapse = null;\n\t\t\tthis.draw();\n\t\t\tif (this.mouseNeuron || this.mouseSynapse)\n\t\t\t\tthis.canvas.classList.add(SELECT_CLASS);\n\t\t\telse\n\t\t\t\tthis.canvas.classList.remove(SELECT_CLASS);\n\t\t})\n\t\t.on('click', evt => {\n\t\t\tif (this.mouseNeuron)\n\t\t\t\tthis.mouseNeuron.disabled = !this.mouseNeuron.disabled;\n\t\t\telse if (this.mouseSynapse)\n\t\t\t\tthis.mouseSynapse.toggle();\n\t\t\tthis.draw();\n\t\t});\n\t}\n\n\tcheckMouseInNeuron(x: number, y: number, r: number,\n\t\tcol: number, row: number) {\n\t\tif (this.mouseNeuron) return;\n\t\tlet dx = this.mouseX - x;\n\t\tlet dy = this.mouseY - y;\n\t\tif (dx * dx + dy * dy < r * r)\n\t\t\tthis.mouseNeuron = this.net.layers[col - 1][row];\n\t}\n\n\tcheckMouseInSynapse(neuron: Neuron, weightNum: number) {\n\t\tif (this.mouseSynapse) return;\n\t\tlet ctx = this.ctx as any;\n\t\tif (ctx.isPointInStroke(this.mouseX, this.mouseY))\n\t\t\tthis.mouseSynapse = new Synapse(neuron, weightNum);\n\t}\n\n}\n",
    "const DEFAULT_ACTIVATION_FUNCTION = sigmoid;\n\ntype ActivationFunction = (number) => number;\ntype NeuronLayer = Neuron[];\n\n\nexport interface Example {\n\tinputs: number[];\n\toutputs: number[];\n}\n\n\nexport class Neuron {\n\tweights: number[];\n\toutput: number;\n\tdisabled = false;\n\tdisabledWeights: number[];\n\n\tconstructor(numWeights: number) {\n\t\tthis.output = NaN;\n\t\tthis.weights = [];\n\t\tthis.disabledWeights = [];\n\t\tfor (let i = 0; i < numWeights; i++) {\n\t\t\tthis.weights.push(Math.random());\n\t\t\tthis.disabledWeights.push(Number.NaN);\n\t\t}\n\t}\n}\n\n\nexport class NeuralNetwork {\n\tlayers: NeuronLayer[];\n\t// Tunable parameters\n\tactivationFunc: ActivationFunction;\n\tepsilon: number;\n\tacceptableError: number;\n\tmaxLearnIterations: number;\n\t// Learn tracking\n\tlearnIteration: number;\n\tlearnError: number;\n\n\tconstructor(public numInputs: number, public layerSizes: number[]) {\n\t\t// Initialize default params\n\t\tthis.activationFunc = DEFAULT_ACTIVATION_FUNCTION;\n\t\tthis.epsilon = 0.5;\n\t\tthis.acceptableError = 0.01;\n\t\tthis.maxLearnIterations = 1000;\n\t\t// Initialize layers\n\t\tthis.layers = [];\n\t\tfor (let i = 0; i < layerSizes.length; i++) {\n\t\t\tlet numWeights = (i == 0 ? numInputs : layerSizes[i - 1]) + 1;\n\t\t\tthis.layers.push(this.createLayer(layerSizes[i], numWeights));\n\t\t}\n\t}\n\n\tcreateLayer(size: number, weights: number): NeuronLayer {\n\t\tlet layer: NeuronLayer = [];\n\t\tfor (let i = 0; i < size; i++)\n\t\t\tlayer.push(new Neuron(weights));\n\t\treturn layer;\n\t}\n\n\t// -------------------- Forward propagation --------------------\n\n\tforwardNeuron(neuron: Neuron, inputs: number[]): number {\n\t\tlet weightedSum = inputs.reduce(\n\t\t\t(accum, input, i) => accum + input * neuron.weights[i], 0);\n\t\tif (neuron.disabled)\n\t\t\tneuron.output = 0;\n\t\telse\n\t\t\tneuron.output = this.activationFunc(weightedSum);\n\t\treturn neuron.output;\n\t}\n\n\tforward(inputs: number[]): number[] {\n\t\tlet layerOut: number[] = [];\n\t\tlet prevLayerOut = this.addBias(inputs);\n\t\tthis.layers.forEach(layer => {\n\t\t\tlayerOut = [];\n\t\t\tlayer.forEach(neuron =>\n\t\t\t\tlayerOut.push(this.forwardNeuron(neuron, prevLayerOut))\n\t\t\t);\n\t\t\tprevLayerOut = this.addBias(layerOut);\n\t\t});\n\t\treturn layerOut;\n\t}\n\n\t// -------------------- Back propagation --------------------\n\n\tbackPropagateNeuron(neuron: Neuron, error: number,\n\t\tprevLayerOuts: number[], prevLayerErrors: number[]): void {\n\t\tlet delta = error * neuron.output * (1 - neuron.output);\n\t\tfor (let j = 0; j < neuron.weights.length; j++) {\n\t\t\tprevLayerErrors[j] += delta * neuron.weights[j];\n\t\t\tneuron.weights[j] += this.epsilon * delta * prevLayerOuts[j];\n\t\t}\n\t}\n\n\tbackPropagate(inputs: number[], targets: number[]): void {\n\t\tlet outputLayer = this.layers[this.layers.length - 1];\n\t\tlet errors = map2(outputLayer, targets, (neuron, target) => target - neuron.output);\n\t\tfor (let l = this.layers.length - 1; l >= 0; l--) {\n\t\t\tlet layer = this.layers[l];\n\t\t\tlet prevLayerOuts = this.addBias(l > 0 ?\n\t\t\t\tthis.layers[l - 1].map(neuron => neuron.output) : inputs);\n\t\t\tlet prevLayerErrors = fillArray(prevLayerOuts.length, 0);\n\t\t\tfor (let i = 0; i < layer.length; i++) {\n\t\t\t\tthis.backPropagateNeuron(layer[i], errors[i], prevLayerOuts, prevLayerErrors);\n\t\t\t}\n\t\t\terrors = prevLayerErrors;\n\t\t}\n\t}\n\n\t// -------------------- Iterative learning --------------------\n\n\tlearn(examples: Example[]): boolean {\n\t\tthis.learnIteration = 0;\n\t\tdo {\n\t\t\tthis.learnError = 0;\n\t\t\tfor (let i = 0; i < examples.length; i++) {\n\t\t\t\tlet actualOuts = this.forward(examples[i].inputs);\n\t\t\t\tlet expectedOuts = examples[i].outputs;\n\t\t\t\tthis.backPropagate(examples[i].inputs, expectedOuts);\n\t\t\t\tthis.learnError += this.sampleError(actualOuts, expectedOuts);\n\t\t\t}\n\t\t\tthis.learnIteration++;\n\t\t\tthis.learnError = this.learnError / examples.length;\n\t\t\tthis.reportLearn(this.learnIteration, this.learnError);\n\t\t} while (this.learnIteration < this.maxLearnIterations\n\t\t\t&& this.learnError > this.acceptableError);\n\t\treturn this.learnError <= this.acceptableError;\n\t}\n\n\tsampleError(actualOuts: number[], expectedOuts: number[]): number {\n\t\tconst square = x => x * x;\n\t\tlet sum = actualOuts.reduce(\n\t\t\t(accum, actualOut, i) => accum + square(actualOut - expectedOuts[i]), 0);\n\t\treturn sum / 2;\n\t}\n\n\t// -------------------- Misc --------------------\n\n\taddBias(values: number[]): number[] {\n\t\tlet biasedValues = values.slice();\n\t\tbiasedValues.push(1);\n\t\treturn biasedValues;\n\t}\n\n\treportLearn(iteration: number, totalError: number) {\n\t\tif (iteration % 100 == 0)\n\t\t\tconsole.log(`Learn iteration ${iteration} - error: ${totalError}`);\n\t}\n\n\t// -------------------- Import / export --------------------\n\n\ttoJSON() {\n\t\treturn {\n\t\t\tnumInputs: this.numInputs,\n\t\t\tlayerSizes: this.layerSizes,\n\t\t\tepsilon: this.epsilon,\n\t\t\tacceptableError: this.acceptableError,\n\t\t\tmaxLearnIterations: this.maxLearnIterations,\n\t\t\tlayers: this.layers,\n\t\t\tlearnIteration: this.learnIteration,\n\t\t\tlearnError: this.learnError\n\t\t};\n\t}\n\n\t/* tslint:disable:member-ordering */\n\tstatic fromJSON(json: any): NeuralNetwork {\n\t\tlet nn = new NeuralNetwork(json.numInputs, json.layerSizes);\n\t\tnn.epsilon = json.epsilon;\n\t\tnn.acceptableError = json.acceptableError;\n\t\tnn.maxLearnIterations = json.maxLearnIterations;\n\t\tnn.layers = json.layers;\n\t\tnn.learnIteration = json.learnIteration;\n\t\tnn.learnError = json.learnError;\n\t\treturn nn;\n\t}\n}\n\n\n// -------------------- Activation functions --------------------\n\nfunction sigmoid(x: number): number {\n\tif (x < -45.0) return 0.0;\n\telse if (x > 45.0) return 1.0;\n\telse return 1.0 / (1.0 + Math.exp(-x));\n}\n\n// -------------------- Utility functions --------------------\n\nexport function fillArray<T>(len: number, v: T): T[] {\n\tlet a = new Array(len);\n\tfor (let i = 0; i < a.length; i++) a[i] = v;\n\treturn a;\n}\n\nexport function map2<T1, T2, U>(array1: T1[], array2: T2[], cb: (value1: T1, value2: T2) => U): U[] {\n\tif (array1.length >= array2.length)\n\t\treturn array1.map((e1, i) => cb(e1, array2[i]));\n\telse\n\t\treturn array2.map((e2, i) => cb(array1[i], e2));\n}\n",
    "import { NeuralNetwork, Example, map2 } from './neurons';\nimport { NeuralNetworkDiagram } from './diagram';\nimport txtutils from './text-utils';\n\ndeclare var _js_editor: any;\nlet nn: NeuralNetwork;\nlet diagram: NeuralNetworkDiagram | null = null;\nlet worker: Worker;\nlet learning = false;\n\n$(function() {\n\t// $('input,textarea').on('input', evt => {\n\t// \tlet formData = getFormData();\n\t// \t//TODO: validate and activate buttons\n\t// });\n\t// --------------- Handle click on \"Learn\" and \"Stop\" buttons ---------------\n\t$('#butlearn').click(doLearn);\n\t$('#butstop').click(_ => {\n\t\tworker.terminate();\n\t\texitLearnMode();\n\t\tnnProgress({ iteration: '', totalError: '' });\n\t});\n\t// -------------------- Handle click on \"Test\" button --------------------\n\t$('#buttest').click(_ => {\n\t\tlet formData = getFormData();\n\t\tlet tests = txtutils.parseLearnLines(formData.testLines, nn.numInputs);\n\t\tlet testResults: number[][] = [];\n\t\ttests.forEach(test => testResults.push(nn.forward(test.inputs)));\n\t\tlet strResult = map2(testResults, tests,\n\t\t\t(result, test) => formatNums(result) +\n\t\t\t\tcompareResult(result, test.outputs)).join('\\n');\n\t\t$('#tout').text(strResult);\n\t});\n\t// -------------------- Handle click on diagram button --------------------\n\t$('#butdiagram').click(_ => {\n\t\tif (!nn) return;\n\t\tlet $diagram = $('#nn-diagram');\n\t\tlet hidden = ($diagram.css('display') == 'none');\n\t\tlet title = hidden ? 'Hide diagram' : 'Show diagram';\n\t\t$('#butdiagram').text(title);\n\t\tif (hidden)\n\t\t\tdrawDiagram(nn, <HTMLCanvasElement>$diagram.get(0));\n\t\t$diagram.slideToggle();\n\t});\n\t// -------------------- Handle click on learn formula --------------------\n\t$('#samples').on('input', evt => {\n\t\tlet numSamples = +(<HTMLInputElement>evt.target).value;\n\t\tlet numInputs = +getFormData().numInputs;\n\t\t$('#tsamples').val(Math.pow(numSamples, numInputs).toLocaleString('es'));\n\t});\n\t$('#butformula').click(_ => {\n\t\tlet code = _js_editor.getModel().getValue();\n\t\tlet fun;\n\t\t// tslint:disable-next-line - Disables all rules for the following line\n\t\teval('fun = ' + code);\n\t\tlet learnData = generateLearnData(getFormData(), fun);\n\t\tlet learnText = learnData.map(example =>\n\t\t\tformatNums(example.inputs) + '  /  ' + formatNums(example.outputs)\n\t\t).join('\\n');\n\t\t$('#ldata').text(learnText);\n\t});\n\t// -------------------- Handle formula editor resize --------------------\n\tlet $formula = $('#js-editor');\n\tlet feH = $formula.height();\n\tsetInterval(_ => {\n\t\tlet newH = $formula.height();\n\t\tif (feH != newH) {\n\t\t\tfeH = newH;\n\t\t\t_js_editor.layout();\n\t\t}\n\t}, 1000);\n\t// -------------------- Enable bootstrap-styled tooltips --------------------\n\t$('[data-toggle=\"tooltip\"]').tooltip();\n});\n\n\n// ------------------------- Learning -------------------------\n\nfunction doLearn() {\n\tenterLearnMode();\n\tlet formData = getFormData();\n\tworker = new Worker('worker.js');\n\tworker.postMessage({ command: 'start', params: formData });\n\tworker.onmessage = msg => {\n\t\tswitch (msg.data.command) {\n\t\t\tcase 'nn-progress': return nnProgress(msg.data.params);\n\t\t\tcase 'nn-learned': return nnLearned(msg.data.params);\n\t\t\tdefault: throw Error('Unknown command: ' + msg.data.command);\n\t\t}\n\t};\n}\n\nfunction enterLearnMode() {\n\tlearning = true;\n\t$('#butlearn').text('Learning...').attr('disabled', 'disabled');\n\tsetTimeout(_ => {\n\t\tif (learning) $('#butstop').fadeIn('slow');\n\t}, 1000);\n}\n\nfunction exitLearnMode() {\n\tlearning = false;\n\t$('#butlearn').text('Learn').removeAttr('disabled');\n\t$('#butstop').fadeOut('fast');\n}\n\nfunction nnProgress(params) {\n\t$('#liters').val(params.iteration);\n\t$('#lerror').val(fmtNum(params.totalError, 7));\n}\n\nfunction nnLearned(nnJSON) {\n\tnn = NeuralNetwork.fromJSON(nnJSON);\n\texitLearnMode();\n\t$('#liters').val(nn.learnIteration);\n\t$('#lerror').val(fmtNum(nn.learnError, 7));\n\t$('#buttest, #butdiagram').removeAttr('disabled');\n\tdrawDiagram(nn, <HTMLCanvasElement>$('#nn-diagram').get(0));\n}\n\nfunction drawDiagram(net: NeuralNetwork, canvas: HTMLCanvasElement) {\n\tif (!diagram)\n\t\tdiagram = new NeuralNetworkDiagram(net, canvas);\n\telse\n\t\tdiagram.net = nn;\n\tdiagram.draw();\n}\n\n// ------------------------- User input parsing -------------------------\n\nfunction getFormData() {\n\treturn {\n\t\tnumInputs: $('#nimputs').val(),\n\t\tnumOutputs: $('#noutputs').val(),\n\t\tnumHidden: $('#nhidden').val(),\n\t\tmaxError: $('#maxerror').val(),\n\t\tmaxIterations: $('#maxiters').val(),\n\t\tepsilon: $('#epsilon').val(),\n\t\tlearnLines: $('#ldata').val(),\n\t\ttestLines: $('#tdata').val(),\n\t\tformulaSamples: $('#samples').val()\n\t};\n}\n\n\n// -------------------- Learn data formula --------------------\n\nfunction generateLearnData(formData: any, func: Function): Example[] {\n\tlet numInputs = +formData.numInputs;\n\tlet samplesPerInput = +formData.formulaSamples;\n\tlet totalInputs = Math.pow(samplesPerInput, numInputs);\n\tlet examples: Example[] = [];\n\tfor (let i = 0; i < totalInputs; i++) examples.push({ inputs: [], outputs: [] });\n\tgenerateInputs(numInputs, samplesPerInput, examples);\n\tfor (let example of examples)\n\t\texample.outputs = func.apply(null, example.inputs);\n\treturn examples;\n}\n\nfunction generateInputs(numInputs: number, samplesPerInput: number,\n\tsamples: Example[], startAt = 0) {\n\tlet inc = 1 / (samplesPerInput - 1);\n\tlet x = 0;\n\tlet totalInputs = Math.pow(samplesPerInput, numInputs);\n\tlet inputsPerStep = totalInputs / samplesPerInput;\n\tfor (let i = 0; i < totalInputs; i++) {\n\t\tsamples[i + startAt].inputs.push(x);\n\t\tif ((i + 1) % inputsPerStep == 0) {\n\t\t\tx += inc;\n\t\t\tif (numInputs > 1)\n\t\t\t\tgenerateInputs(numInputs - 1, samplesPerInput, samples,\n\t\t\t\t\tstartAt + i + 1 - inputsPerStep);\n\t\t}\n\t}\n}\n\n// -------------------- Misc --------------------\n\nfunction compareResult(actual: number[], expected: number[]): string {\n\tif (expected.length == 0) return '';\n\treturn '  /  (' +\n\t\tactual.map((act, i) => numError(act, expected[i]).toLocaleString('en-US', {\n\t\t\tstyle: 'percent',\n\t\t\tmaximumFractionDigits: 3\n\t\t})).join('  ') + ')';\n}\n\nfunction numError(actual: number, expected: number, range = 1): number {\n\treturn Math.abs((actual - expected) / range);\n}\n\nfunction formatNums(nums: number[], len = 6): string {\n\treturn nums.map(x => fmtNum(x, len)).join('  ');\n}\n\nfunction fmtNum(n: number, len = 5): string {\n\treturn n.toLocaleString('en-US', {\n\t\tminimumFractionDigits: len,\n\t\tmaximumFractionDigits: len,\n\t\tuseGrouping: false\n\t});\n}\n",
    "import { Example } from './neurons';\n\nexport default {\n\tparseLearnLines,\n\tparseExample,\n\tparseDataLines,\n\tparseNumbers\n};\n\nfunction parseLearnLines(allLines: string, numInputs: number, numOutputs?: number): Example[] {\n\tlet examples: Example[] = [];\n\tlet lines = parseDataLines(allLines);\n\tlines.forEach((line, i) => {\n\t\tlet example = parseExample(line);\n\t\t//TODO validate line by checking:\n\t\t//\t- if example.outputs is [], then the / is missing (that is OK for tests, not OK for learning)\n\t\t//\t- if the number of inputs or outputs is invalid, then some values are missing or exceeding\n\t\t//\t- if some value is NaN, then there are invalid numbers\n\t\tif (example) examples.push(example);\n\t});\n\treturn examples;\n}\n\nfunction parseExample(line: string): Example | null {\n\tlet inout = line.split('/');\n\tlet inputs = parseNumbers(inout[0]);\n\tlet outputs = inout.length < 2 ? [] : parseNumbers(inout[1]);\n\treturn { inputs, outputs };\n}\n\nfunction parseDataLines(allLines: string): string[] {\n\treturn allLines.split('\\n').filter(line => {\n\t\tline = line.trim();\n\t\treturn line.length > 0 && line[0] != '#';\n\t}).map(line => line.replace(/\\t/g, ' '));\n}\n\nfunction parseNumbers(line: string): number[] {\n\treturn line.split(' ').filter(s => s.length > 0).map(s => parseFloat(s));\n}\n"
  ]
}