{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/neurons.ts",
    "src/nnn-web.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "const DEFAULT_ACTIVATION_FUNCTION = sigmoid;\n\ntype ActivationFunction = (number) => number;\n\n\nexport interface Example {\n\tinputs: number[];\n\toutputs: number[];\n}\n\n\nexport class Neuron {\n\tweights: number[];\n\toutput: number;\n\n\tconstructor(numWeights: number) {\n\t\tthis.output = NaN;\n\t\tthis.weights = [];\n\t\tfor (let i = 0; i < numWeights; i++)\n\t\t\tthis.weights.push(Math.random());\n\t}\n}\n\n\nexport class NeuralNetwork {\n\thiddenLayer: Neuron[];\n\toutputLayer: Neuron[];\n\t// Tunable parameters\n\tactivationFunc: ActivationFunction;\n\tepsilon: number;\n\tacceptableError: number;\n\tmaxLearnIterations: number;\n\t// Learn tracking\n\tlearnIteration: number;\n\tlearnError: number;\n\n\tconstructor(public numInputs: number, public numHidden: number, public numOutputs: number) {\n\t\t// Initialize default params\n\t\tthis.activationFunc = DEFAULT_ACTIVATION_FUNCTION;\n\t\tthis.epsilon = 0.5;\n\t\tthis.acceptableError = 0.1;\n\t\tthis.maxLearnIterations = 1000;\n\t\t// Initialize layers\n\t\tthis.hiddenLayer = [];\n\t\tfor (let i = 0; i < numHidden; i++)\n\t\t\tthis.hiddenLayer.push(new Neuron(this.numInputs + 1));\n\t\tthis.outputLayer = [];\n\t\tfor (let i = 0; i < numOutputs; i++)\n\t\t\tthis.outputLayer.push(new Neuron(this.numHidden + 1));\n\t}\n\n\t// -------------------- Forward propagation --------------------\n\n\tforwardNeuron(neuron: Neuron, inputs: number[]): number {\n\t\tif (inputs.length != neuron.weights.length)\n\t\t\tthrow new Error(`Invalid size of input array: expecting ${neuron.weights.length}, got ${inputs.length}`);\n\t\tlet weightedSum = inputs.reduce(\n\t\t\t(accum, input, i) => accum + input * neuron.weights[i], 0);\n\t\tneuron.output = this.activationFunc(weightedSum);\n\t\treturn neuron.output;\n\t}\n\n\tforward(inputs: number[]): number[] {\n\t\tlet hlValues: number[] = [];\n\t\tlet outValues: number[] = [];\n\t\tthis.hiddenLayer.forEach(neuron =>\n\t\t\thlValues.push(this.forwardNeuron(neuron, this.addBias(inputs)))\n\t\t);\n\t\thlValues.push(1);\t\t// Add bias\n\t\tthis.outputLayer.forEach(neuron =>\n\t\t\toutValues.push(this.forwardNeuron(neuron, hlValues))\n\t\t);\n\t\treturn outValues;\n\t}\n\n\t// -------------------- Back propagation --------------------\n\n\tbackPropagate(inputs: number[], targets: number[]): void {\n\t\t// Adjust weights for output layer\n\t\tlet hiddenOuts = this.hiddenLayer.map(neuron => neuron.output);\n\t\tlet hiddenErrors: number[] = [];\n\t\tfor (let i = 0; i < this.hiddenLayer.length; i++) hiddenErrors.push(0);\n\t\tfor (let i = 0; i < this.outputLayer.length; i++)\n\t\t\tthis.backPropagateOutNeuron(\n\t\t\t\tthis.outputLayer[i], targets[i], this.addBias(hiddenOuts), hiddenErrors);\n\t\t// Adjust weights for hidden layer\n\t\tfor (let i = 0; i < this.hiddenLayer.length; i++)\n\t\t\tthis.backPropagateHiddenNeuron(\n\t\t\t\tthis.hiddenLayer[i], hiddenErrors[i], this.addBias(inputs));\n\t}\n\n\tbackPropagateOutNeuron(neuron: Neuron, target: number,\n\t\tprevLayerOuts: number[], prevLayerErrors: number[]): void {\n\t\tlet delta = (target - neuron.output) * neuron.output * (1 - neuron.output);\n\t\tfor (let j = 0; j < neuron.weights.length; j++) {\n\t\t\tprevLayerErrors[j] += delta * neuron.weights[j];\n\t\t\tneuron.weights[j] += this.epsilon * delta * prevLayerOuts[j];\n\t\t}\n\t}\n\n\tbackPropagateHiddenNeuron(neuron: Neuron, error: number, inputs: number[]): void {\n\t\tlet delta = error * neuron.output * (1 - neuron.output);\n\t\tfor (let j = 0; j < neuron.weights.length; j++)\n\t\t\tneuron.weights[j] += this.epsilon * delta * inputs[j];\n\t}\n\n\t// -------------------- Iterative learning --------------------\n\n\tlearn(examples: Example[]): boolean {\n\t\tthis.learnIteration = 0;\n\t\tdo {\n\t\t\tthis.learnError = 0;\n\t\t\tfor (let i = 0; i < examples.length; i++) {\n\t\t\t\tlet actualOuts = this.forward(examples[i].inputs);\n\t\t\t\tlet expectedOuts = examples[i].outputs;\n\t\t\t\tthis.backPropagate(examples[i].inputs, expectedOuts);\n\t\t\t\tthis.learnError += this.sampleError(actualOuts, expectedOuts);\n\t\t\t}\n\t\t\tthis.learnIteration++;\n\t\t\tthis.reportLearn(this.learnIteration, this.learnError);\n\t\t} while (this.learnIteration < this.maxLearnIterations\n\t\t\t&& this.learnError > this.acceptableError);\n\t\treturn this.learnError <= this.acceptableError;\n\t}\n\n\tsampleError(actualOuts: number[], expectedOuts: number[]): number {\n\t\tconst square = x => x * x;\n\t\tlet sum = actualOuts.reduce(\n\t\t\t(accum, actualOut, i) => accum + square(actualOut - expectedOuts[i]), 0);\n\t\treturn sum / 2;\n\t}\n\n\t// -------------------- Misc --------------------\n\n\taddBias(values: number[]): number[] {\n\t\tlet biasedValues = values.slice();\n\t\tbiasedValues.push(1);\n\t\treturn biasedValues;\n\t}\n\n\treportLearn(iteration, totalError) {\n\t\tif (iteration % 100 == 0)\n\t\t\tconsole.log(`Learn iteration ${iteration} - error: ${totalError}`);\n\t}\n\n}\n\n\n// -------------------- Activation functions --------------------\n\nfunction sigmoid(x: number): number {\n\tif (x < -45.0) return 0.0;\n\telse if (x > 45.0) return 1.0;\n\telse return 1.0 / (1.0 + Math.exp(-x));\n}\n",
    "import { NeuralNetwork, Example } from './neurons';\n\nlet nn: NeuralNetwork;\n\n$(function() {\n\t// $('input,textarea').on('input', evt => {\n\t// \tlet formData = getFormData();\n\t// \t//TODO: validate and activate buttons\n\t// });\n\t$('#butlearn').click(_ => {\n\t\t$('#butlearn').text('Learning...');\n\t\tlet formData = getFormData();\n\t\tnn = new NeuralNetwork(+formData.numInputs, +formData.numHidden, +formData.numOutputs);\n\t\tnn.acceptableError = +formData.maxError;\n\t\tnn.maxLearnIterations = +formData.maxIterations;\n\t\tnn.epsilon = +formData.epsilon;\n\t\tlet examples = parseLearnLines(formData.learnLines, +formData.numInputs, +formData.numOutputs);\n\t\tsetTimeout(() => {\n\t\t\tnn.learn(examples);\n\t\t\tconsole.log(`*** Learned in ${nn.learnIteration} iterations, with an error of ${nn.learnError}`);\n\t\t\t$('#butlearn').text('Learn');\n\t\t\t$('#liters').val(nn.learnIteration);\n\t\t\t$('#lerror').val(fmtNum(nn.learnError, 9));\n\t\t\t$('#buttest').attr('disabled', <any>false);\n\t\t}, 10);\n\t});\n\t$('#buttest').click(_ => {\n\t\tlet formData = getFormData();\n\t\tlet tests = parseTestLines(formData.testLines, nn.numInputs);\n\t\tlet testResults: number[][] = [];\n\t\ttests.forEach(test => testResults.push(nn.forward(test)));\n\t\tlet strResult = testResults\n\t\t\t.map(result => result.map(x => fmtNum(x, 6)).join('  '))\n\t\t\t.join('\\n');\n\t\t$('#tout').text(strResult);\n\t});\n});\n\nfunction getFormData() {\n\treturn {\n\t\tnumInputs: $('#nimputs').val(),\n\t\tnumOutputs: $('#noutputs').val(),\n\t\tnumHidden: $('#nhidden').val(),\n\t\tmaxError: $('#maxerror').val(),\n\t\tmaxIterations: $('#maxiters').val(),\n\t\tepsilon: $('#epsilon').val(),\n\t\tlearnLines: $('#ldata').val(),\n\t\ttestLines: $('#tdata').val()\n\t};\n}\n\nfunction parseLearnLines(allLines: string, numInputs: number, numOutputs: number): Example[] {\n\tlet examples: Example[] = [];\n\tlet lines = allLines.split('\\n').filter(line => line.length > 0);\n\tlines.forEach((line, i) => {\n\t\tlet example = parseExample(line);\n\t\t//TODO validate line by checking:\n\t\t//\t- if example is null, then the / is missing\n\t\t//\t- if the number of inputs or outputs is invalid, then some values are missing or exceeding\n\t\t//\t- if some value is NaN, then there are invalid numbers\n\t\tif (example) examples.push(example);\n\t});\n\treturn examples;\n}\n\nfunction parseExample(line: string): Example | null {\n\tlet inout = line.split('/');\n\tif (inout.length < 2) return null;\n\tlet str2numarr = str => str.split(' ').filter(s => s.length > 0).map(s => parseFloat(s));\n\tlet inputs = str2numarr(inout[0]);\n\tlet outputs = str2numarr(inout[1]);\n\treturn { inputs, outputs };\n}\n\nfunction parseTestLines(allLines: string, numInputs: number): number[][] {\n\tlet tests: number[][];\n\ttests = [];\n\tlet lines = allLines.split('\\n').filter(line => line.length > 0);\n\tlines.forEach((line, i) => {\n\t\tlet inputs = line.split(' ').filter(s => s.length > 0).map(s => parseFloat(s));\n\t\t//TODO validate line by checking:\n\t\t//\t- if the number of inputs is invalid, then some values are missing or exceeding\n\t\t//\t- if some value is NaN, then there are invalid numbers\n\t\ttests.push(inputs);\n\t});\n\treturn tests;\n}\n\nfunction fmtNum(n: number, len = 5): string {\n\treturn n.toString().substr(0, len);\n}\n"
  ]
}